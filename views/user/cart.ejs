<div class="container">
  <div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
    <a href="/" class="stext-109 cl8 hov-cl1 trans-04">
      Home
      <i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
    </a>

    <span class="stext-109 cl4"> Shoping Cart </span>
  </div>
  <%- include('cartdesign') -%> <%- include('address') -%> <%- include('coupon')
  -%><%- include('checkOut') -%>
  <script>
    function checkAddress() {
      var addressSelect = document.getElementById("address");
      var selectedAddress =
        addressSelect.options[addressSelect.selectedIndex].value;

      console.log(selectedAddress);
      if (selectedAddress === "Select a Address ...") {
        swal("Please select an address");
      } else {
        document.querySelector(".js-show-modal4").click();
      }
    }
    function couponapply() {
      const couponCode = document.getElementById("couponapply").value;

      console.log(couponCode);
      $.ajax({
        url: "/applyCoupon",
        method: "post",
        data: {
          couponCode: couponCode,
        },
        success: (response) => {
          if (response.getMinRupees) {
            let m = parseInt($("#discountCoupon").text());
            let k = m + response.discountAmount;
            $("#mainTotal").html(`${k}`);
            $("#discountarea").addClass("d-none");
            swal({
              icon: "error",
              title: "Oops..You have a USed this Code Enough Time!",
              text: "You have a USed this Code Enough Time!",
              showConfirmButton: false,
              timer: 5000,
            });
          } else if (response.getCode) {
            $("#discountReport").html(
              `<i class="fa fa-check"></i> Coupon ${response.code.couponCode} applied. Discount: ${response.discountAmount}`
            );
            $("#discountCoupon").html(`${response.discountAmount}`);
            $("#discountarea").removeClass("d-none");
            let m = parseInt($("#mainTotal").text());
            let k = m - response.discountAmount;
            $("#mainTotal").html(`${k}`);
          } else {
            let m = parseInt($("#discountCoupon").text());
            let k = m + response.discountAmount;
            $("#mainTotal").html(`${k}`);
            $("#discountarea").addClass("d-none");
            parseInt($("#mainTotal").text());
            swal({
              icon: "error",
              title: "Oops..You Type a Wrong Code!",
              text: "Out Of Stock!",
              showConfirmButton: false,
              timer: 5000,
            });
          }
        },
      });
    }
  </script>
  <script>
    // Define the userAddresses object before the script is called
    var userAddressesr = `<%- JSON.stringify(userAddresses) %>`;
    var userAddressest = JSON.parse(userAddressesr);
    console.log("hdsfbdhsz");
    console.log(userAddressest[0].id);

    function updateInputFields() {
      // Get the selected option
      const selectElement = document.querySelector("#address");
      const selectedOption =
        selectElement.options[selectElement.selectedIndex].value;
      console.log(selectedOption);
      // Get the data for the selected option from the userAddresses object
      const selectedAddress = userAddressest.find(
        (address) => address._id === selectedOption
      );
      console.log("llo");

      // Update the input field values
      document.querySelector('[name="userAddressesName"]').value =
        selectedAddress.name;
      document.querySelector('[name="userAddressesName"]').placeholder =
        selectedAddress.name;
      document.querySelector('[name="houseName"]').value =
        selectedAddress.houseName;
      document.querySelector('[name="pinCode"]').value =
        selectedAddress.pinCode;
    }

    // Call the function initially to set the default values
    updateInputFields();
  </script>
  <script>
    function changeQuantity(cartId, proId, size, count) {
      let quantity = parseInt(document.getElementById(proId).innerText);
      if ((quantity === 1) & (count == "-1")) {
        console.log(proId, size);
        deleteItemMainCart(cartId, size);
      } else {
        $.ajax({
          url: "/changeQuantity",
          method: "post",
          data: {
            cartId: cartId,
            proId: proId,
            count: count,
            size: size,
            quantity: quantity,
          },
          success: (response) => {
            if (response.status) {
              location.reload();
              hide();
            } else if (response.noStock) {
              swal({
                icon: "error",
                title: "Oops..!",
                text: "Out Of Stock!",
                showConfirmButton: false,
                timer: 1000,
              });
            } else if (response.maxLimitStock) {
              swal({
                icon: "warning",
                title: "Oops..!",
                text: "Limit is Reached!",
                showConfirmButton: false,
                timer: 1000,
              });
            } else {
              viewItemMainCart();
            }
          },
        });
      }
    }
  </script>

  <script>
    function deleteItemMainCart(id, size) {
      swal({
        title: "Are you sure?",
        text: "Once deleted, you will not be able to recover this item from your cart!",
        icon: "warning",
        buttons: true,
        dangerMode: true,
      }).then((willDelete) => {
        if (willDelete) {
          fetch("/deleteFromCart", {
            method: "delete",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              id: id,
              size: size,
            }),
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                viewDeleteMainCart();
              }
            })
            .catch((error) => {
              swal("Error deleting product from cart: " + error);
            });
        } else {
          swal("Item not deleted!");
        }
      });
    }

    function viewDeleteMainCart() {
      $.ajax({
        url: "/postFromMainCart",
        method: "POST",
        success: function (response) {
          $("#fullCart").html(response);
          var cartcount = parseInt($("#cartvalue").attr("data-notify")) - 1;
          $(".cartvalue").attr("data-notify", cartcount);
          swal({
            title: "Item deleted from cart!",
            icon: "success",
          });
        },
        error: function (xhr, status, error) {
          console.log(error);
        },
      });
    }
    function viewItemMainCart() {
      $.ajax({
        url: "/postFromMainCart",
        method: "POST",
        success: function (response) {
          $("#fullCart").html(response);
          var cartcount = parseInt($("#cartvalue").attr("data-notify")) - 1;
          $(".cartvalue").attr("data-notify", cartcount);
        },
        error: function (xhr, status, error) {
          console.log(error);
        },
      });
    }
  </script>
</div>
