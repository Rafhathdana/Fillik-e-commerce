<div class="main-panel">
  <div class="content-wrapper">
    <div class="page-header">
      <h3 class="page-title">Add Products</h3>
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="#">View Products</a></li>
          <li class="breadcrumb-item active" aria-current="page">
            Add Products<a
              href="#"
              class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1"
            >
              Quick View
            </a>
          </li>
        </ol>
      </nav>
    </div>
    <div class="row">
      <div class="col-12 grid-margin stretch-card">
        <div class="card">
          <div class="card-body">
            <form id="myForm" method="POST" enctype="multipart/form-data">
              <p class="text-danger" id="message"></p>
              <div class="form-group">
                <label for="name">Name of the Product</label>
                <input
                  type="text"
                  class="form-control"
                  id="name"
                  name="name"
                  placeholder="Enter the Name of..."
                  required
                />
              </div>
              <div class="form-group">
                <label for="description">Short Description</label>
                <input
                  type="text"
                  class="form-control"
                  id="description"
                  name="description"
                  placeholder="Enter the Description..."
                />
              </div>

              <div class="form-group">
                <label for="genderType">Gender Type</label>
                <select
                  class="form-control"
                  id="genderType"
                  name="genderType"
                  style="padding: 1rem"
                >
                  <% for (let i = 0; i < genderType.length; i++) { %>
                  <option
                    class="selectoption"
                    value="<%= genderType[i]._id %>"
                    style="min-height: 1rem; padding: 1rem"
                  >
                    <%= genderType[i].values %>
                  </option>
                  <% } %>
                </select>
              </div>
              <div class="form-group">
                <label for="category">Add Category</label>
                <select
                  class="form-control"
                  id="category"
                  name="category"
                  style="padding: 1rem"
                >
                  <% for (let i = 0; i < category.length; i++) { %>
                  <option
                    class="selectoption"
                    value="<%= category[i]._id %>"
                    style="min-height: 1rem; padding: 1rem"
                  >
                    <%= category[i].values %>
                  </option>
                  <% } %>
                </select>
              </div>
              <div class="form-group">
                <label for="colour">Colour</label>
                <select
                  class="form-control"
                  id="colour"
                  name="colour"
                  style="padding: 1rem"
                >
                  <% for (let i = 0; i < colour.length; i++) { %>
                  <option
                    class="selectoption"
                    value="<%= colour[i]._id %>"
                    style="min-height: 1rem; padding: 1rem"
                  >
                    <%= colour[i].values %>
                  </option>
                  <% } %>
                </select>
              </div>

              <div class="form-group">
                <label for="pattern">Pattern</label>
                <select
                  class="form-control"
                  id="pattern"
                  name="pattern"
                  style="padding: 1rem"
                >
                  <% for (let i = 0; i < pattern.length; i++) { %>
                  <option
                    class="selectoption"
                    value="<%= pattern[i]._id %>"
                    style="min-height: 1rem; padding: 1rem"
                  >
                    <%= pattern[i].values %>
                  </option>
                  <% } %>
                </select>
              </div>
              <div class="form-group">
                <label for="orginalPrice">Orginal Price</label>
                <input
                  type="text"
                  class="form-control"
                  id="orginalPrice"
                  name="orginalPrice"
                  placeholder="Enter the actual price..."
                />
              </div>
              <div class="form-group">
                <label for="sellerPrice ">Your Price:</label>
                <input
                  type="text"
                  class="form-control price"
                  id="sellerPrice"
                  name="sellerPrice"
                  placeholder="Enter the actual price..."
                  required
                />
              </div>
              <div class="form-group">
                <label for="exampleInputCity1">Sizes and Quantity</label>
                <div class="form-group row" style="width: 60%">
                  <label for="small" class="col-sm-3 col-form-label"
                    >Small</label
                  >
                  <div class="col-sm-9">
                    <input
                      type="number"
                      name="small"
                      class="form-control"
                      min="0"
                      id="small"
                      placeholder="0"
                      value="0"
                    />
                  </div>
                </div>
                <div class="form-group row" style="width: 60%">
                  <label for="medium" class="col-sm-3 col-form-label"
                    >Medium</label
                  >
                  <div class="col-sm-9">
                    <input
                      type="number"
                      class="form-control"
                      name="medium"
                      min="0"
                      id="medium"
                      placeholder="0"
                      value="0"
                    />
                  </div>
                </div>
                <div class="form-group row" style="width: 60%">
                  <label for="large" class="col-sm-3 col-form-label"
                    >Large</label
                  >
                  <div class="col-sm-9">
                    <input
                      type="number"
                      class="form-control"
                      name="large"
                      min="0"
                      id="large"
                      placeholder="0"
                      value="0"
                    />
                  </div>
                </div>
                <div class="form-group row" style="width: 60%">
                  <label for="extraLarge" class="col-sm-3 col-form-label"
                    >Extra Large</label
                  >
                  <div class="col-sm-9">
                    <input
                      type="number"
                      class="form-control"
                      name="extraLarge"
                      min="0"
                      id="extraLarge"
                      placeholder="0"
                      value="0"
                    />
                  </div>
                </div>
              </div>
              <div class="form-group">
                <label for="moreinfo">More Text or Comments</label>
                <textarea
                  class="form-control"
                  id="moreinfo"
                  name="moreinfo"
                  rows="4"
                ></textarea>
              </div>

              <div class="form-group">
                <label class="form-label categoryname" for="image-input"
                  >Main Image</label
                >
                <div class="form-file">
                  <input
                    type="file"
                    class="form-file-input"
                    id="images"
                    name="images"
                    accept="image/*"
                    multiple
                    onchange="previewImages(event)"
                  />
                  <label class="form-file-label" for="images">
                    <span class="form-file-text">Choose a file...</span>
                    <span class="form-file-button">Browse</span>
                  </label>
                </div>
              </div>

              <div id="preview-container" class="row gx-3 mt-5"></div>
              <template id="image-preview-template">
                <div class="col-md-2">
                  <div class="raf">
                    <img class="raf-img-top" src="" alt="" />
                    <div class="raf-body">
                      <button
                        type="button"
                        class="btn1 btn-sm"
                        onclick="removeImage(event)"
                      >
                        X
                      </button>
                    </div>
                  </div>
                </div>
              </template>
              <button
                type="submit"
                id="button"
                class="btn btn-gradient-primary me-2"
              >
                Submit
              </button>

              <button id="clearBtn" class="btn btn-light">Clear</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>

<script>
  $(document).ready(function () {
    $.validator.addMethod(
      "noSpecialChars",
      function (value, element) {
        return this.optional(element) || /^(?!\s)[a-zA-Z ]+$/.test(value);
      },
      "Special characters and spaces are not allowed"
    );
    $.validator.addMethod(
      "number",
      function (value, element) {
        return this.optional(element) || /^(?!0)[0-9]+$/.test(value);
      },
      "Numbers only allowed"
    );
    $.validator.addMethod(
      "price",
      function (value, element) {
        const sellerPrice = parseFloat(value);
        const originalPrice = parseFloat($("#orginalPrice").val());
        const maximumPrice = originalPrice * 0.952380952; // 95.2380952% of the original price

        if (sellerPrice < maximumPrice) {
          return true;
        } else {
          return false;
        }
      },
      function (params, element) {
        const originalPrice = parseFloat($("#originalPrice").val());
        const maximumPrice = originalPrice * 0.952380952;
        return `The seller price must be within MRP, and the maximum price is Rs${maximumPrice.toFixed(
          2
        )}`;
      }
    );

    $("#myForm").validate({
      rules: {
        name: {
          required: true,
          noSpecialChars: true,
        },
        description: {
          required: true,
        },
        genderType: {
          required: true,
        },
        category: {
          required: true,
        },
        colour: {
          required: true,
        },
        pattern: {
          required: true,
        },
        orginalPrice: {
          required: true,
          number: true,
        },
        sellerPrice: {
          required: true,
          number: true,
          price: true,
        },

        small: {
          required: true,
          number: true,
        },
        medium: {
          required: true,
          number: true,
        },
        large: {
          required: true,
          number: true,
        },
        extraLarge: {
          required: true,
          number: true,
        },
        moreinfo: {
          required: true,
        },
      },
      messages: {
        name: {
          required: "Please enter the name of the product",
          noSpecialChars: "Special characters and spaces are not allowed",
        },
        description: {
          required: "Please enter the description",
        },
        genderType: {
          required: "Please select the gender type",
        },
        category: {
          required: "Please select the category",
        },
        colour: {
          required: "Please select the color",
        },
        pattern: {
          required: "Please select the pattern",
        },
        orginalPrice: {
          required: "Please enter the original price",
          number: "Please enter a valid number",
        },
        sellerPrice: {
          required: "Please enter the seller price",
          number: "Please enter a valid number",
          price: function (params, element) {
            const originalPrice = parseFloat($("#orginalPrice").val());
            const maximumPrice = originalPrice * 0.952380952;
            return `The seller price must be within MRP, and the maximum price is Rs${maximumPrice.toFixed(
              2
            )}`;
          },
        },
        small: {
          required: "Please enter the quantity for the small size",
          number: "Please enter a valid number",
        },
        medium: {
          required: "Please enter the quantity for the medium size",
          number: "Please enter a valid number",
        },
        large: {
          required: "Please enter the quantity for the large size",
          number: "Please enter a valid number",
        },
        extraLarge: {
          required: "Please enter the quantity for the extra-large size",
          number: "Please enter a valid number",
        },
        moreinfo: {
          required: "Please provide more information",
        },
      },
      highlight: function (element) {
        $(element).closest(".form-group").addClass("is-invalid");
      },
      unhighlight: function (element) {
        $(element).closest(".form-group").removeClass("is-invalid");
      },
      errorElement: "div",
      errorClass: "invalid-feedback",
      errorPlacement: function (error, element) {
        if (element.parent(".input-group").length) {
          error.insertAfter(element.parent());
        } else if (element.hasClass("file-input")) {
          error.insertAfter(element.closest(".custom-file"));
        } else {
          error.insertAfter(element);
        }
      },
    });

    $.validator.addMethod(
      "required",
      $.validator.methods.required,
      "Please agree to the Terms & Conditions"
    );
  });
</script>
<script>
  const form = document.querySelector("#myForm");
  const clearBtn = document.querySelector("#clearBtn");

  clearBtn.addEventListener("click", (event) => {
    event.preventDefault(); // prevent the button from submitting the form
    form.reset(); // reset all form fields to their default values
  });

  function previewImages(event) {
    const previewContainer = document.getElementById("preview-container");
    previewContainer.innerHTML = ""; // Clear previous previews
    const files = event.target.files;
    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      const reader = new FileReader();
      reader.onload = function () {
        const imagePreviewTemplate = document.getElementById(
          "image-preview-template"
        );
        const imagePreview = imagePreviewTemplate.content.cloneNode(true);
        imagePreview.querySelector("img").src = reader.result;
        previewContainer.appendChild(imagePreview);
      };
      reader.readAsDataURL(file);
    }
  }

  function removeImage(event) {
    const raf = event.target.closest(".raf");
    raf.remove();
    const previewContainer = document.getElementById("preview-container");
    const files = document.getElementById("images").files;
    if (previewContainer.children.length < files.length) {
      document.getElementById("images").value = ""; // Clear selected files if images were removed
    }
  }
</script>
