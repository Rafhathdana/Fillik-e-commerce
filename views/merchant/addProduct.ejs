<div class="main-panel">
  <div class="content-wrapper">
    <div class="page-header">
      <h3 class="page-title">Add Products</h3>
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="#">View Products</a></li>
          <li class="breadcrumb-item active" aria-current="page">
            Add Products<a
              href="#"
              class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1"
            >
              Quick View
            </a>
          </li>
        </ol>
      </nav>
    </div>
    <div class="row">
      <div class="col-12 grid-margin stretch-card">
        <div class="card">
          <div class="card-body">
            <form id="myForm" method="POST" enctype="multipart/form-data">
              <p class="text-danger" id="message"></p>
              <div class="form-group">
                <label for="name">Name of the Product</label>
                <input
                  type="text"
                  class="form-control"
                  id="name"
                  name="name"
                  placeholder="Enter the Name of..."
                  required
                />
              </div>
              <div class="form-group">
                <label for="description">Short Description</label>
                <input
                  type="text"
                  class="form-control"
                  id="description"
                  name="description"
                  placeholder="Enter the Description..."
                />
              </div>

              <div class="form-group">
                <label for="genderType">Gender Type</label>
                <select
                  class="form-control"
                  id="genderType"
                  name="genderType"
                  style="padding: 1rem"
                >
                  <% for (let i = 0; i < genderType.length; i++) { %>
                  <option
                    class="selectoption"
                    value="<%= genderType[i]._id %>"
                    style="min-height: 1rem; padding: 1rem"
                  >
                    <%= genderType[i].values %>
                  </option>
                  <% } %>
                </select>
              </div>
              <div class="form-group">
                <label for="category">Add Category</label>
                <select
                  class="form-control"
                  id="category"
                  name="category"
                  style="padding: 1rem"
                >
                  <% for (let i = 0; i < category.length; i++) { %>
                  <option
                    class="selectoption"
                    value="<%= category[i]._id %>"
                    style="min-height: 1rem; padding: 1rem"
                  >
                    <%= category[i].values %>
                  </option>
                  <% } %>
                </select>
              </div>
              <div class="form-group">
                <label for="colour">Colour</label>
                <select
                  class="form-control"
                  id="colour"
                  name="colour"
                  style="padding: 1rem"
                >
                  <% for (let i = 0; i < colour.length; i++) { %>
                  <option
                    class="selectoption"
                    value="<%= colour[i]._id %>"
                    style="min-height: 1rem; padding: 1rem"
                  >
                    <%= colour[i].values %>
                  </option>
                  <% } %>
                </select>
              </div>

              <div class="form-group">
                <label for="pattern">Pattern</label>
                <select
                  class="form-control"
                  id="pattern"
                  name="pattern"
                  style="padding: 1rem"
                >
                  <% for (let i = 0; i < pattern.length; i++) { %>
                  <option
                    class="selectoption"
                    value="<%= pattern[i]._id %>"
                    style="min-height: 1rem; padding: 1rem"
                  >
                    <%= pattern[i].values %>
                  </option>
                  <% } %>
                </select>
              </div>
              <div class="form-group">
                <label for="orginalPrice">Orginal Price</label>
                <input
                  type="text"
                  class="form-control"
                  id="orginalPrice"
                  name="orginalPrice"
                  placeholder="Enter the actual price..."
                />
              </div>
              <div class="form-group">
                <label for="sellerPrice ">Your Price:</label>
                <input
                  type="text"
                  class="form-control price"
                  id="sellerPrice"
                  name="sellerPrice"
                  placeholder="Enter the actual price..."
                  required
                />
              </div>
              <div class="form-group">
                <label for="exampleInputCity1">Sizes and Quantity</label>
                <div class="form-group row" style="width: 60%">
                  <label for="small" class="col-sm-3 col-form-label"
                    >Small</label
                  >
                  <div class="col-sm-9">
                    <input
                      type="number"
                      name="small"
                      class="form-control"
                      min="0"
                      id="small"
                      placeholder="0"
                      value="0"
                    />
                  </div>
                </div>
                <div class="form-group row" style="width: 60%">
                  <label for="medium" class="col-sm-3 col-form-label"
                    >Medium</label
                  >
                  <div class="col-sm-9">
                    <input
                      type="number"
                      class="form-control"
                      name="medium"
                      min="0"
                      id="medium"
                      placeholder="0"
                      value="0"
                    />
                  </div>
                </div>
                <div class="form-group row" style="width: 60%">
                  <label for="large" class="col-sm-3 col-form-label"
                    >Large</label
                  >
                  <div class="col-sm-9">
                    <input
                      type="number"
                      class="form-control"
                      name="large"
                      min="0"
                      id="large"
                      placeholder="0"
                      value="0"
                    />
                  </div>
                </div>
                <div class="form-group row" style="width: 60%">
                  <label for="extraLarge" class="col-sm-3 col-form-label"
                    >Extra Large</label
                  >
                  <div class="col-sm-9">
                    <input
                      type="number"
                      class="form-control"
                      name="extraLarge"
                      min="0"
                      id="extraLarge"
                      placeholder="0"
                      value="0"
                    />
                  </div>
                </div>
              </div>
              <div class="form-group">
                <label for="moreinfo">More Text or Comments</label>
                <textarea
                  class="form-control"
                  id="moreinfo"
                  name="moreinfo"
                  rows="4"
                ></textarea>
              </div>

              <div class="form-group">
                <label class="form-label categoryname" for="image-input"
                  >Main Image</label
                >
                <div class="form-file">
                  <input
                    type="file"
                    class="form-file-input"
                    id="images"
                    name="images"
                    accept="image/*"
                    multiple
                    onchange="previewImages(event)"
                  />
                  <label class="form-file-label" for="images">
                    <span class="form-file-text">Choose a file...</span>
                    <span class="form-file-button">Browse</span>
                  </label>
                </div>
              </div>

              <div id="preview-container" class="row gx-3 mt-5"></div>
              <template id="image-preview-template">
                <div class="col-md-2">
                  <div class="raf">
                    <img class="raf-img-top" src="" alt="" />
                    <div class="raf-body">
                      <button
                        type="button"
                        class="btn1 btn-sm"
                        onclick="removeImage(event)"
                      >
                        X
                      </button>
                    </div>
                  </div>
                </div>
              </template>
              <button
                type="submit"
                id="button"
                onclick="submitForm()"
                class="btn btn-gradient-primary me-2"
              >
                Submit
              </button>

              <button id="clearBtn" class="btn btn-light">Clear</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
<script>
  const form = document.querySelector("#myForm");
  const clearBtn = document.querySelector("#clearBtn");

  clearBtn.addEventListener("click", (event) => {
    event.preventDefault(); // prevent the button from submitting the form
    form.reset(); // reset all form fields to their default values
  });

  function previewImages(event) {
    const previewContainer = document.getElementById("preview-container");
    previewContainer.innerHTML = ""; // Clear previous previews
    const files = event.target.files;
    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      const reader = new FileReader();
      reader.onload = function () {
        const imagePreviewTemplate = document.getElementById(
          "image-preview-template"
        );
        const imagePreview = imagePreviewTemplate.content.cloneNode(true);
        imagePreview.querySelector("img").src = reader.result;
        previewContainer.appendChild(imagePreview);
      };
      reader.readAsDataURL(file);
    }
  }

  function removeImage(event) {
    const raf = event.target.closest(".raf");
    raf.remove();
    const previewContainer = document.getElementById("preview-container");
    const files = document.getElementById("images").files;
    if (previewContainer.children.length < files.length) {
      document.getElementById("images").value = ""; // Clear selected files if images were removed
    }
  }
</script>
<script>
  function submitForm() {
    var name = document.getElementsByName("name")[0].value;
    var genderType =
      document.getElementsByName("genderType")[0].options[
        document.getElementsByName("genderType")[0].selectedIndex
      ].value;
    var category =
      document.getElementsByName("category")[0].options[
        document.getElementsByName("category")[0].selectedIndex
      ].value;
    var colour =
      document.getElementsByName("colour")[0].options[
        document.getElementsByName("colour")[0].selectedIndex
      ].value;
    var pattern =
      document.getElementsByName("pattern")[0].options[
        document.getElementsByName("pattern")[0].selectedIndex
      ].value;
    var originalPrice = document.getElementsByName("originalPrice")[0].value;
    var sellerPrice = document.getElementsByName("sellerPrice")[0].value;
    var small = document.getElementsByName("small")[0].value;
    var medium = document.getElementsByName("medium")[0].value;
    var large = document.getElementsByName("large")[0].value;
    var extraLarge = document.getElementsByName("extraLarge")[0].value;
    var moreinfo = document.getElementsByName("moreinfo")[0].value;
    // Check if any of the values is null
    if (
      name === null ||
      genderType === null ||
      category === null ||
      colour === null ||
      pattern === null ||
      originalPrice === null ||
      sellerPrice === null ||
      small === null ||
      medium === null ||
      large === null ||
      extraLarge === null ||
      moreinfo === null
    ) {
      return;
    }

    // Define custom validation methods
    $.validator.addMethod(
      "integer",
      function (value, element) {
        return this.optional(element) || /^[0-9]+$/.test(value);
      },
      "Please enter a valid integer."
    );

    $.validator.addMethod(
      "price",
      function (value, element) {
        const originalPrice = parseFloat($("#originalPrice").val());
        const maximumPrice = originalPrice * 0.952380952;
        return (
          this.optional(element) ||
          (value <= maximumPrice &&
            value >= originalPrice &&
            /^[0-9]+(\.[0-9]{1,2})?$/.test(value))
        );
      },
      "The seller price must be within MRP, and the maximum price is Rs{maximumPrice.toFixed(2)}"
    );

    // Perform form validation
    $("#myForm").validate({
      rules: {
        originalPrice: {
          required: true,
          integer: true,
        },
        sellerPrice: {
          required: true,
          price: true,
        },
        small: {
          required: true,
          integer: true,
        },
        medium: {
          required: true,
          integer: true,
        },
        large: {
          required: true,
          integer: true,
        },
        extraLarge: {
          required: true,
          integer: true,
        },
      },
      messages: {
        originalPrice: {
          required: "Please enter the original price.",
        },
        sellerPrice: {
          required: "Please enter the seller price.",
        },
        small: {
          required: "Please enter the quantity for small size.",
        },
        medium: {
          required: "Please enter the quantity for medium size.",
        },
        large: {
          required: "Please enter the quantity for large size.",
        },
        extraLarge: {
          required: "Please enter the quantity for extra large size.",
        },
      },
    });

    // Submit the form if it's valid
    if ($("#myForm").valid()) {
      var file = document.getElementById("images").files[0];
      if (!file) {
        // File input is empty, handle the error here
        alert("Please select an image to upload.");
        return;
      }

      Swal.fire({
        title: "Are you sure you want to upload?",
        icon: "question",
        showCancelButton: true,
        confirmButtonText: "Yes",
        cancelButtonText: "Cancel",
      }).then((result) => {
        if (result.isConfirmed) {
          const formData = new FormData();
          formData.append("image", file);
          formData.append("name", name);
          formData.append("genderType", genderType);
          formData.append("category", category);
          formData.append("pattern", pattern);
          formData.append("originalPrice", originalPrice);
          formData.append("small", small);
          formData.append("medium", medium);
          formData.append("large", large);
          formData.append("extraLarge", extraLarge);
          formData.append("moreinfo", moreinfo);

          var xhr = new XMLHttpRequest();
          xhr.open("POST", "/merchant/addproduct", true);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
              swal("Data updated successfully", "success");
              window.location.reload();
            }
          };
          xhr.send(formData);
        }
      });
    }
  }
</script>
